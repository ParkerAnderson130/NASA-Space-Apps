{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\varun\\\\OneDrive\\\\Documents\\\\GitHub\\\\NASA-Space-Apps\\\\app\\\\src\\\\pages\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { UserMessage, AssistantMessage } from \"./MessageTypes.js\";\n//import \"./styles/Chat.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Chat() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!question.trim()) return;\n    const userMessage = {\n      type: \"user\",\n      text: question\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setQuestion(\"\");\n    try {\n      const response = await fetch(\"http://localhost:8000/ask\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          question: question\n        })\n      });\n      const data = await response.json();\n      const assistantMessage = {\n        type: \"assistant\",\n        text: data.answer,\n        cypher: data.cypher_query,\n        dbResults: data.database_results\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n    } catch (err) {\n      console.error(err);\n      setMessages(prev => [...prev, {\n        type: \"error\",\n        text: \"Failed to fetch answer from API.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Neo4j Conversational Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, idx) => {\n        if (msg.type === \"user\") return /*#__PURE__*/_jsxDEV(UserMessage, {\n          text: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 43\n        }, this);\n        if (msg.type === \"assistant\") return /*#__PURE__*/_jsxDEV(AssistantMessage, {\n          text: msg.text,\n          cypher: msg.cypher,\n          dbResults: msg.dbResults\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message error\",\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"What's on your mind?\",\n        value: question,\n        onChange: e => setQuestion(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"/uMhc+1ZKELe3NxjZo+iwb4c/Lg=\");\n_c = Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","UserMessage","AssistantMessage","jsxDEV","_jsxDEV","Chat","_s","question","setQuestion","messages","setMessages","handleSubmit","e","preventDefault","trim","userMessage","type","text","prev","response","fetch","method","headers","body","JSON","stringify","data","json","assistantMessage","answer","cypher","cypher_query","dbResults","database_results","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","idx","onSubmit","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/varun/OneDrive/Documents/GitHub/NASA-Space-Apps/app/src/pages/Chat.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { UserMessage, AssistantMessage } from \"./MessageTypes.js\";\r\n//import \"./styles/Chat.scss\";\r\n\r\nexport default function Chat() {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!question.trim()) return;\r\n\r\n    const userMessage = { type: \"user\", text: question };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setQuestion(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:8000/ask\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          question: question,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      const assistantMessage = {\r\n        type: \"assistant\",\r\n        text: data.answer,\r\n        cypher: data.cypher_query,\r\n        dbResults: data.database_results,\r\n      };\r\n\r\n      setMessages((prev) => [...prev, assistantMessage]);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { type: \"error\", text: \"Failed to fetch answer from API.\" },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h2>Neo4j Conversational Chat</h2>\r\n      <div className=\"chat-window\">\r\n        {messages.map((msg, idx) => {\r\n          if (msg.type === \"user\") return <UserMessage key={idx} text={msg.text} />;\r\n          if (msg.type === \"assistant\")\r\n            return (\r\n              <AssistantMessage\r\n                key={idx}\r\n                text={msg.text}\r\n                cypher={msg.cypher}\r\n                dbResults={msg.dbResults}\r\n              />\r\n            );\r\n          return <div key={idx} className=\"message error\">{msg.text}</div>;\r\n        })}\r\n      </div>\r\n      <form onSubmit={handleSubmit} className=\"chat-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          value={question}\r\n          onChange={(e) => setQuestion(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}